// Code generated by mockery v2.39.1. DO NOT EDIT.

package mocks

import (
	domain "speed-typing-text-service/internal/core/domain"

	mock "github.com/stretchr/testify/mock"
)

// RegularTextRepository is an autogenerated mock type for the RegularTextRepository type
type RegularTextRepository struct {
	mock.Mock
}

// GetRegularTexts provides a mock function with given fields:
func (_m *RegularTextRepository) GetRegularTexts() []domain.RegularText {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetRegularTexts")
	}

	var r0 []domain.RegularText
	if rf, ok := ret.Get(0).(func() []domain.RegularText); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.RegularText)
		}
	}

	return r0
}

// NewRegularTextRepository creates a new instance of RegularTextRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRegularTextRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *RegularTextRepository {
	mock := &RegularTextRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
